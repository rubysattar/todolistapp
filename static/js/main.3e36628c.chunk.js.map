{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAmCeA,MA9Bf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACxB,OAAO,qBAAKC,UAAU,OAAf,SAEH,8BACI,uBAAOC,KAAK,OACZC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SACI,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAG7C,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAC1CC,QAAS,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAbfJ,EAAKI,QAkB3C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACClB,O,eCvBbmB,IAAQC,IAAIC,K,IAyEGC,E,kDAtEb,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAIR,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAbD,E,wDAeNf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAIuB,KAAKC,W,8BAIPpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAC3B,GAAoB,KAAjBS,EAAQxB,KAAY,CACrB,IAAMyB,EAAS,GAAD,mBAAKN,KAAKL,MAAMtB,OAAhB,CAAuBgC,IACrCL,KAAKC,SAAS,CACZ5B,MAAMiC,EACNV,YAAY,CACVf,KAAK,GACLF,IAAI,S,iCAKDA,GACT,IAAM4B,EAAeP,KAAKL,MAAMtB,MAAMmC,QAAO,SAAAjC,GAAI,OAC/CA,EAAKI,MAAQA,KACbqB,KAAKC,SAAS,CAAE5B,MAAOkC,M,gCAEjB1B,EAAMF,GACd,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAKA,MAGdmB,KAAKC,SAAS,CACZ5B,MAAOA,M,+BAIT,OACE,sBAAKG,UAAU,MAAf,UACE,mCACI,oBAAIA,UAAU,QAAd,sCACA,mBAAGA,UAAU,QAAb,kHACF,uBAAME,GAAG,aAAa+B,SAAUT,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOiC,YAAY,eAAe9B,MAAOoB,KAAKL,MAAMC,YAAYf,KAAMC,SAAUkB,KAAKH,cACjG,wBAAQpB,KAAK,SAAb,4BAGJ,cAAC,EAAD,CAAWJ,MAAS2B,KAAKL,MAAMtB,MAAOe,WAAYY,KAAKZ,WAAYJ,UAAWgB,KAAKhB,mB,GAjEzE2B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3e36628c.chunk.js","sourcesContent":["import React from 'react'\nimport './ListItems.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport FlipMove from 'react-flip-move'\n\nfunction ListItems(props){\n    const items = props.items\n    const listItems = items.map(item => {\n        return <div className=\"list\" key={item.key}>\n            {/* turning the p into an input field will make editing possible */}\n            <p>\n                <input type=\"text\" \n                id={item.key}\n                value={item.text}\n                onChange={ \n                    (e) => {\n                        props.setUpdate(e.target.value, item.key)\n                    }\n                }/>\n                <span>\n                    <FontAwesomeIcon className=\"faicons\" icon='trash'\n                    onClick={() => props.deleteItem(item.key)}/>\n                </span>\n            </p>\n        </div>\n    })\n    return(\n        <div>\n            <FlipMove duration={400} easing=\"ease-in-out\">\n            {listItems}\n            </FlipMove>\n            </div>\n    )\n}\n\nexport default ListItems\n","import './App.css';\nimport React from 'react';\nimport ListItems from './ListItems'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    // bind all your functions to the constructor\n    this.handleInput = this.handleInput.bind(this)\n    this.addItem = this.addItem.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.setUpdate = this.setUpdate.bind(this)\n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n  addItem(e){\n    e.preventDefault()\n    const newItem = this.state.currentItem\n    if(newItem.text !== ''){\n      const newItems=[...this.state.items, newItem]\n      this.setState({\n        items:newItems,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    }\n  }\n  deleteItem(key){\n    const filteredItems= this.state.items.filter(item => \n      item.key !== key)\n      this.setState({ items: filteredItems })\n  }\n  setUpdate(text, key){\n    const items = this.state.items\n    items.map(item => {\n      if(item.key===key){\n        item.text=text\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n            <h1 className=\"rules\">Manage your to-do list. </h1>\n            <p className=\"rules\">Start by adding a new task. Edit tasks you've already added. Delete a task when it's been completed.</p>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"I need to...\" value={this.state.currentItem.text} onChange={this.handleInput}/>\n            <button type=\"submit\">Add task</button>\n          </form>\n        </header>\n        <ListItems items = {this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}></ListItems>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}